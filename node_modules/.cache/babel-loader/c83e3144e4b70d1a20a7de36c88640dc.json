{"ast":null,"code":"var _jsxFileName = \"/home/strange/DEV/Web_Dev/SiteOne/src/components/responsiveNavigation.jsx\";\nimport React, { useState } from 'react';\n\nfunction ResponsiveNavigation({\n  background,\n  hoverBackground,\n  linkColor,\n  navLinks,\n  logo\n}) {\n  // const [ hoverIndex, setHoverIndex ] = useState(-1);\n  // const [ navOpen, setNavOpen] = useState(false);\n  console.log(background);\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"responsive-toolbar\",\n    style: {\n      background: background\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      background: background\n    } // className = {navOpen ? 'active' : ''}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 18\n    }\n  }), navLinks.map((link, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    onMouseEnter: () => {\n      setHoverIndex(index);\n    },\n    onMouseLeave: () => {\n      setHoverIndex(-1);\n    },\n    style: {\n      background: hoverIndex === index ? hoverBackground || '#999' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: link.path,\n    style: {\n      color: linkColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, link.text, /*#__PURE__*/React.createElement(\"i\", {\n    className: link.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  })))));\n}\n\nexport default ResponsiveNavigation;","map":{"version":3,"sources":["/home/strange/DEV/Web_Dev/SiteOne/src/components/responsiveNavigation.jsx"],"names":["React","useState","ResponsiveNavigation","background","hoverBackground","linkColor","navLinks","logo","console","log","map","link","index","setHoverIndex","hoverIndex","path","color","text","icon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,eAAd;AAA+BC,EAAAA,SAA/B;AAA0CC,EAAAA,QAA1C;AAAoDC,EAAAA;AAApD,CAA9B,EAAwF;AAEpF;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AACK,IAAA,KAAK,EAAI;AAAEA,MAAAA,UAAU,EAAEA;AAAd,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGS;AACG,IAAA,KAAK,EAAI;AAACA,MAAAA,UAAU,EAAEA;AAAb,KADZ,CAEG;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHT,EASUG,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACX;AACI,IAAA,GAAG,EAAKA,KADZ;AAEI,IAAA,YAAY,EAAK,MAAM;AAAEC,MAAAA,aAAa,CAACD,KAAD,CAAb;AAAsB,KAFnD;AAGI,IAAA,YAAY,EAAK,MAAM;AAAEC,MAAAA,aAAa,CAAC,CAAC,CAAF,CAAb;AAAmB,KAHhD;AAII,IAAA,KAAK,EAAK;AAAEV,MAAAA,UAAU,EAAEW,UAAU,KAAKF,KAAf,GAAwBR,eAAe,IAAI,MAA3C,GAAqD;AAAnE,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMQ,oBAAC,IAAD;AACI,IAAA,EAAE,EAAKO,IAAI,CAACI,IADhB;AAEI,IAAA,KAAK,EAAI;AAAEC,MAAAA,KAAK,EAAEX;AAAT,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAISM,IAAI,CAACM,IAJd,eAKQ;AAAG,IAAA,SAAS,EAAGN,IAAI,CAACO,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CANR,CADF,CATV,CADJ;AA8BH;;AAED,eAAehB,oBAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction ResponsiveNavigation({ background, hoverBackground, linkColor, navLinks, logo}){\n\n    // const [ hoverIndex, setHoverIndex ] = useState(-1);\n    // const [ navOpen, setNavOpen] = useState(false);\n\n    console.log(background);\n\n    return(\n        <nav className='responsive-toolbar'\n             style = {{ background: background}}>\n\n                 <ul \n                    style = {{background: background}}\n                    // className = {navOpen ? 'active' : ''}\n                    >    \n                    </ul>\n\n                { navLinks.map((link, index) =>\n                    <li \n                        key = { index }\n                        onMouseEnter = { () => { setHoverIndex(index) } }\n                        onMouseLeave = { () => { setHoverIndex(-1) } }\n                        style = { { background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\n                        >\n                            <Link \n                                to = { link.path}\n                                style = {{ color: linkColor}}\n                                >\n                                    {link.text}\n                                    <i className= {link.icon} />\n\n                                </Link>\n\n                        </li>\n                )}\n             </nav>\n    )\n}\n\nexport default ResponsiveNavigation"]},"metadata":{},"sourceType":"module"}